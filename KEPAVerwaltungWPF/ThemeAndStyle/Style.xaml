<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" 
                    xmlns:mw="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:Conv="clr-namespace:KEPAVerwaltungWPF.Converters">
    
    
    
    <!--Converters-->
    <Conv:BoolToVisibilityConverter x:Key="BoolToVisConverter"/>
    <Conv:MagnifyEnumToMagnifyTypeConverter x:Key="MagnifyEnumToMagnifyTypeConverter" />
    <Conv:DateYearOneToEmptyDateConverter x:Key="DateYearOneToEmptyDateConverter" />
    <Conv:BoolToCheckBoxImageConverter x:Key="BoolToCheckBoxImageConverter" />
    
    <!--Button-->
    <Style x:Key="GoBackBtnStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignPaperButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="4 0 20 0"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="6 0"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="FontSize" Value="18"/>
         <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <md:Card Name="BtnCard"
                             md:ElevationAssist.Elevation="Dp2"
                             Background="{DynamicResource BackgroundBrush}">
                        <Border VerticalAlignment="Center" 
                                Padding="6 0" 
                                BorderThickness="1 0"
                                BorderBrush="{DynamicResource PrimaryBrush}">
                            <ContentPresenter HorizontalAlignment="Center"/>
                        </Border>
                    </md:Card>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnCard" Property="md:ElevationAssist.Elevation" Value="Dp6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- MainMenuStyle -->
    <Style x:Key="BtnMainMenuStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="26" />
        <Setter Property="Margin" Value="6 0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="8"/>
                            </Grid.RowDefinitions>
                            <!--ContentPresenter-->
                            <Border Grid.Row="0" VerticalAlignment="Bottom">
                                <ContentPresenter HorizontalAlignment="Center" />
                            </Border>

                            <!--borderCurser-->
                            <Border x:Name="borderCurser" Grid.Row="1" 
                                    VerticalAlignment="Top" 
                                    Height="4" Background="{DynamicResource BackgroundBrush}"
                                    Opacity="0">
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--Not IsEnabled-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>

                        <!--IsChecked-->
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="borderCurser" 
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" 
                                                         Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="borderCurser" 
                                                         Storyboard.TargetProperty="Opacity" 
                                                         To="0" 
                                                         Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- SubMenuStyle --> 
    <Style x:Key="BtnUnderPageMenuStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{DynamicResource SubMenuPrimary}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="ExtraBold"/>
        <Setter Property="Margin" Value="6 0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="8"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="ContentBorder" Grid.Row="0" 
                                    Background="{DynamicResource SubMenuBackground}"
                                    BorderThickness="0" 
                                    BorderBrush="{DynamicResource SubMenuPrimary}">
                                <Border.Effect>
                                    <DropShadowEffect Color="{DynamicResource PrimaryAccentColor}" Direction="-90" ShadowDepth="2"/>
                                </Border.Effect>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>

                            <Border x:Name="CurserBorder" Grid.Row="1"
                                    Height="8" Margin="0 2 0 0" 
                                    BorderThickness="0 2 0 0" 
                                    BorderBrush="{DynamicResource SubMenuPrimary}"
                                    Background="{DynamicResource SubMenuBackground}"
                                    Opacity="0">
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="ContentBorder" 
                                                            Storyboard.TargetProperty="BorderThickness" To="0 0 0 1" 
                                                            Duration="0:0:0.2">
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="ContentBorder" 
                                                            Storyboard.TargetProperty="BorderThickness" To="0" 
                                                            Duration="0:0:0.3">
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CurserBorder" 
                                                         Storyboard.TargetProperty="Opacity" To="1" 
                                                         Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CurserBorder" 
                                                         Storyboard.TargetProperty="Opacity" To="0" 
                                                         Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- TitelTxtBxStyle -->
    <Style x:Key="TitelTxtBxStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TitleBrush}"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontFamily" Value="Forte"/>
        <Setter Property="Margin" Value="4 0"/>
        <Setter Property="FontWeight" Value="ExtraBold"/>
    </Style>
    
    <!-- Card Header Label -->
    <Style x:Key="CardHeaderStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    
    <!--TextBox-->
    <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="md:HintAssist.Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="md:HintAssist.HintOpacity" Value="1"/>
        <Setter Property="md:HintAssist.FloatingScale" Value="1.0"/>
    </Style>

    <Style x:Key="TextBxAngabenStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <!-- <Setter Property="FontFamily" Value="Roboto"/> -->
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>                
        <Setter Property="md:HintAssist.Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="md:HintAssist.HintOpacity" Value="1"/>
        <Setter Property="md:HintAssist.FloatingScale" Value="1.0"/>                
        <Setter Property="md:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryBrush}"/>                
        <Setter Property="md:ValidationAssist.PopupPlacement" Value="Bottom"/>
        <Setter Property="md:ValidationAssist.UsePopup" Value="False"/>
        <Setter Property="md:ValidationAssist.Background" Value="Transparent"/>
        <Setter Property="md:ValidationAssist.OnlyShowOnFocus" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>
    
    <!-- Checkbox -->
    <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
    </Style>
    
    <!--ComboBoxItem und ComboBox-->
    <!--ComboBoxItem-->
    <Style x:Key="ComboBoxItemIDValueStyle" TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{Binding ID}" Visibility="Collapsed"/>
                        <Label Content="{Binding Value}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxItemValueStyle" TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="{Binding }"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--ComboBox-->
    <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
        <!-- <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/> -->
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 6 0 2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="md:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="md:HintAssist.IsFloating" Value="True"/>
        <Setter Property="md:HintAssist.FloatingScale" Value="1.0"/>
        <Setter Property="md:HintAssist.Foreground" Value="{DynamicResource PrimaryBrush}"/>
    </Style>
    
    <!--DatePicker Property="DisplayDateStart" Value="{x:Static system:DateTime.Now}"-->
    <Style TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <!-- <Setter Property="Background" Value="Transparent"/> -->
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="md:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="md:HintAssist.FloatingScale" Value="1.0"/>
        <Setter Property="md:HintAssist.Foreground" Value="{DynamicResource PrimaryBrush}"/>
    </Style>
    
    <!--<Style x:Key="TabControlWrap" TargetType="TabControl" BasedOn="{StaticResource MahApps.Styles.TabControl.Animated}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        ~1~ Tab Headers @1@
                        <DockPanel>
                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                            </ScrollViewer>
                        </DockPanel>

                        ~1~ Tab Content @1@
                        <ContentPresenter ContentSource="SelectedContent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    
    <!--TabButtonTemplate-->
    <DataTemplate x:Key="TabButtonTemplate" DataType="Border">
        <Border MinWidth="150">
            <Border BorderBrush="{DynamicResource PrimaryBrush}"
                    Width="{Binding}" 
                    Height="30" 
                    Cursor="Hand" 
                    Margin="4" 
                    CornerRadius="10">
                <Label Content="{Binding }" 
                       FontSize="18" 
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center" 
                       VerticalContentAlignment="Center"
                       FontWeight="Bold" Padding="10 2"
                       Foreground="{DynamicResource PrimaryBrush}">
                </Label>

                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderThickness" Value="6 1"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Duration="0:0:0.1"
                                                                Storyboard.TargetProperty="BorderThickness"
                                                                To="1 1 1 4">
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Duration="0:0:0.3"
                                                                Storyboard.TargetProperty="BorderThickness"
                                                                To="6 1">
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Border>
    </DataTemplate>
        
    <!--DataGrid Styles-->
    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border Background="{DynamicResource PrimaryBrush}">
                        <ContentPresenter UseLayoutRounding="True"
                                          SnapsToDevicePixels="True"
                                          HorizontalAlignment="Left" 
                                          VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridCell}" BasedOn="{ StaticResource MaterialDesignDataGridCell}">
        <Setter Property="Height" Value="38"/>
        <Setter Property="Padding" Value="6 6"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Padding" Value="0 4"/>
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MaterialDesignDataGridRow}">
        <Setter Property="Height" Value="38"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource HoverBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="DataGridRow.IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="DataGridCell.IsSelected" Value="True" />
                    <Condition Property="DataGridCell.IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource HoverBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Visible"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
    </Style>
    
</ResourceDictionary>