<UserControl x:Class="KEPAVerwaltungWPF.Views.Pages.MitgliederView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:mw="http://metro.mahapps.com/winfx/xaml/controls" 
             xmlns:local="clr-namespace:KEPAVerwaltungWPF.Views.Pages"
             xmlns:vm="clr-namespace:KEPAVerwaltungWPF.ViewModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:dtOs="clr-namespace:KEPAVerwaltungWPF.DTOs"
             xmlns:helper="clr-namespace:KEPAVerwaltungWPF.Helper"
             mc:Ignorable="d"
             d:DesignHeight="800" d:DesignWidth="1400"
             d:DataContext="{d:DesignInstance Type=vm:MitgliederViewModel}">
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding GetInitialDataCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <UserControl.Resources>
        
        <Style TargetType="TreeView">
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer Focusable="False">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
           
         <Style TargetType="TreeViewItem" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
             <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
             <Setter Property="FontSize" Value="14" />
             <Setter Property="Padding" Value="4,2,2,2" />
         </Style> 
        
        <HierarchicalDataTemplate x:Key="TemplateParent" DataType="{x:Type dtOs:TreeNode}" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Name}" Foreground="{DynamicResource PrimaryBrush}"/>
                <TextBlock Text=" ("  Foreground="{DynamicResource PrimaryBrush}"/>
                <TextBlock Text="{Binding Children.Count}"  Foreground="{DynamicResource PrimaryBrush}"/>
                <TextBlock Text=")"  Foreground="{DynamicResource PrimaryBrush}"/>
            </StackPanel>
        </HierarchicalDataTemplate>
        
        <DataTemplate x:Key="TemplateChild">
            <TextBlock Text="{Binding Name}" Foreground="{DynamicResource PrimaryBrush}" />
        </DataTemplate>
        
        <helper:TreeNodeTemplateSelector x:Key="TreeNodeTemplateSelector"
                                         ParentTemplate="{StaticResource TemplateParent}"
                                         ChildTemplate="{StaticResource TemplateChild}" />
        
    </UserControl.Resources>
    
    <Grid Background="{DynamicResource BackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Titelzeile -->
        <Grid Grid.Row="0" Margin="10 0">
            <Grid HorizontalAlignment="Left">
                <TextBlock Text="{Binding Titel}" MinWidth="200"
                           Style="{StaticResource TitelTxtBxStyle}">
                </TextBlock>
            </Grid>
        </Grid>
        
        <!-- Inhalt -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Treeview -->
            <Grid Grid.Column="0" Margin="20 20">
                <md:Card HorizontalAlignment="Left" 
                         VerticalAlignment="Top"
                         Background="{DynamicResource BackgroundBrush}"
                         md:ElevationAssist.Elevation="Dp3">
                    <StackPanel Margin="10 5">
                        <Label Content="Mitgliederliste"
                               Margin="0 0 0 5"
                               Style="{StaticResource CardHeaderStyle}">
                        </Label>
                        <Border BorderBrush="{DynamicResource PrimaryBrush}"
                                BorderThickness="0">
                            <TreeView x:Name="tvMitglieder"
                                      ItemTemplateSelector="{StaticResource TreeNodeTemplateSelector}"
                                      ItemsSource="{Binding MitgliederTree}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectedItemChanged">
                                        <i:InvokeCommandAction Command="{Binding TvSelectedItemChangedCommand}"
                                                               CommandParameter="{Binding ElementName=tvMitglieder, Path=SelectedItem}">
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TreeView>
                        </Border>
                    </StackPanel>
                </md:Card>
            </Grid>
            
            <Grid Grid.Column="1"  Margin="0 20" >
                <md:Card HorizontalAlignment="Left"
                         VerticalAlignment="Top"
                         Background="{DynamicResource BackgroundBrush}"
                         md:ElevationAssist.Elevation="Dp3">
                    <StackPanel Margin="20 20"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Left">
                        <mw:MetroAnimatedTabControl Background="{DynamicResource BackgroundBrush}"
                                                    MinHeight="500">
                            <mw:MetroTabItem Header="Persönliches"  HeaderTemplate="{StaticResource TabButtonTemplate}"
                                             VerticalContentAlignment="Top">
                                <StackPanel Orientation="Vertical">
                                    <WrapPanel Margin="0 10">
                                        <TextBox md:HintAssist.Hint="Anrede" 
                                                 Margin="10 10"
                                                 MinWidth="60"
                                                 IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                                 Text="{Binding CurrentMitglied.Anrede, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource TextBxAngabenStyle}">
                                        </TextBox>
                                        <TextBox md:HintAssist.Hint="Vorname" 
                                                 Margin="10 10"
                                                 MinWidth="140"
                                                 IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                                 Text="{Binding CurrentMitglied.Vorname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource TextBxAngabenStyle}">
                                        </TextBox>
                                        <TextBox md:HintAssist.Hint="Nachname" 
                                                 Margin="10 10"
                                                 MinWidth="140"
                                                 IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                                 Text="{Binding CurrentMitglied.Nachname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource TextBxAngabenStyle}">
                                        </TextBox>
                                        <TextBox md:HintAssist.Hint="Spitzname" 
                                                 Margin="10 10"
                                                 MinWidth="140"
                                                 IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                                 Text="{Binding CurrentMitglied.Spitzname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource TextBxAngabenStyle}">
                                        </TextBox>
                                        <TextBox md:HintAssist.Hint="Straße" 
                                                 Margin="10 10"
                                                 MinWidth="200"
                                                 IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                                 Text="{Binding CurrentMitglied.Straße, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource TextBxAngabenStyle}">
                                        </TextBox>
                                        <TextBox md:HintAssist.Hint="PLZ" 
                                                 Margin="10 10"
                                                 MinWidth="50"
                                                 IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                                 Text="{Binding CurrentMitglied.PLZ, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource TextBxAngabenStyle}">
                                        </TextBox>
                                        <TextBox md:HintAssist.Hint="Ort" 
                                                 Margin="10 10"
                                                 MinWidth="200"
                                                 IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                                 Text="{Binding CurrentMitglied.Ort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource TextBxAngabenStyle}">
                                        </TextBox>
                                        <TextBox md:HintAssist.Hint="Festnetz" 
                                                 Margin="10 10"
                                                 MinWidth="200"
                                                 IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                                 Text="{Binding CurrentMitglied.TelefonPrivat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource TextBxAngabenStyle}">
                                        </TextBox>
                                        <TextBox md:HintAssist.Hint="Mobil" 
                                                 Margin="10 10"
                                                 MinWidth="200"
                                                 IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                                 Text="{Binding CurrentMitglied.TelefonMobil, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource TextBxAngabenStyle}">
                                        </TextBox>
                                        <TextBox md:HintAssist.Hint="E-Mail" 
                                                 Margin="10 10"
                                                 MinWidth="200"
                                                 IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                                 Text="{Binding CurrentMitglied.EMail, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Style="{StaticResource TextBxAngabenStyle}">
                                        </TextBox>
                                        <DatePicker md:HintAssist.Hint="Geburtsdatum"
                                                    Margin="10 10"
                                                    SelectedDate="{Binding CurrentMitglied.Geburtsdatum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DateYearOneToEmptyDateConverter}}"
                                                    MinWidth="130"
                                                    IsEnabled="{Binding AreFieldsEditable, UpdateSourceTrigger=PropertyChanged}">
                                        </DatePicker>
                                        <DatePicker md:HintAssist.Hint="Mitglied seit"
                                                    Margin="10 10"
                                                    SelectedDate="{Binding CurrentMitglied.MitgliedSeit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DateYearOneToEmptyDateConverter}}"
                                                    MinWidth="130"
                                                    IsEnabled="{Binding AreFieldsEditable, UpdateSourceTrigger=PropertyChanged}">
                                        </DatePicker>
                                        <DatePicker md:HintAssist.Hint="Passiv seit"
                                                    Margin="10 10"
                                                    SelectedDate="{Binding CurrentMitglied.PassivSeit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DateYearOneToEmptyDateConverter}}"
                                                    MinWidth="130"
                                                    IsEnabled="{Binding AreFieldsEditable, UpdateSourceTrigger=PropertyChanged}">
                                        </DatePicker>
                                        <DatePicker md:HintAssist.Hint="Ausgeschieden am"
                                                    Margin="10 10"
                                                    SelectedDate="{Binding CurrentMitglied.AusgeschiedenAm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DateYearOneToEmptyDateConverter}}"
                                                    MinWidth="130"
                                                    IsEnabled="{Binding AreFieldsEditable, UpdateSourceTrigger=PropertyChanged}">
                                        </DatePicker>
                                        <CheckBox Content="Ehemaliger"
                                                  Margin="10 10"
                                                  IsEnabled="{Binding AreFieldsEditable, UpdateSourceTrigger=PropertyChanged}"
                                                  IsChecked="{Binding CurrentMitglied.Ehemaliger, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        </CheckBox>
                                    </WrapPanel>
                                    <Label Margin="0 20"
                                           Content="{Binding ValidationMessage}"
                                           Foreground="{DynamicResource ValidationErrorBrush}"
                                           FontWeight="Bold"
                                           FontSize="20"
                                           MinWidth="200">
                                    </Label>
                                </StackPanel>
                            </mw:MetroTabItem>
                            
                            <mw:MetroTabItem Header="Notizen"  HeaderTemplate="{StaticResource TabButtonTemplate}"
                                             VerticalContentAlignment="Top">
                                <StackPanel VerticalAlignment="Top" Margin="0 10">
                                    <TextBox md:HintAssist.Hint="Notizen" 
                                             Margin="10 10"
                                             MinWidth="200"
                                             MinHeight="200"
                                             TextWrapping="Wrap"
                                             IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                             Text="{Binding CurrentMitglied.Notizen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             VerticalAlignment="Top"
                                             VerticalContentAlignment="Top"
                                             HorizontalAlignment="Stretch">
                                    </TextBox>
                                    <TextBox md:HintAssist.Hint="Bemerkungen" 
                                             Margin="10 10"
                                             MinWidth="200"
                                             MinHeight="200"
                                             TextWrapping="Wrap"
                                             IsReadOnly="{Binding IsFieldReadonly, UpdateSourceTrigger=PropertyChanged}"
                                             Text="{Binding CurrentMitglied.Bemerkungen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             VerticalContentAlignment="Top"
                                             HorizontalAlignment="Stretch">
                                    </TextBox>
                                </StackPanel>
                            </mw:MetroTabItem>
                            
                            <mw:MetroTabItem Header="Ergebnisse"  HeaderTemplate="{StaticResource TabButtonTemplate}"
                                             VerticalContentAlignment="Top">
                                <Grid Margin="0 10">
                                    <DataGrid x:Name="dgErgebnisse"
                                              IsReadOnly="True"
                                              SelectionMode="Single"
                                              ItemsSource="{Binding StatistikSpielerErgebnisse}">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Spieltag" Binding="{Binding Spieltag, StringFormat=\{0:dd.MM.yyyy\}}" MinWidth="130" Width="*"/>
                                            <DataGridTextColumn Header="Meisterschaft" Binding="{Binding Meisterschaft}" MinWidth="250"  Width="*"/>
                                            <DataGridTextColumn Header="Gegenspieler" Binding="{Binding Gegenspieler}" MinWidth="250"  Width="*"/>
                                            <DataGridTextColumn Header="Erg." Binding="{Binding Ergebnis}" MinWidth="50"  Width="*"/>
                                            <DataGridTextColumn Header="Holz" Binding="{Binding Holz}" MinWidth="50"  Width="*"/>
                                            <DataGridTextColumn Header="6-Tage-Rennen Runden" Binding="{Binding SechsTageRennen_Runden}" MinWidth="250"  Width="*"/>
                                            <DataGridTextColumn Header="6-Tage-Rennen Punkte" Binding="{Binding SechsTageRennen_Punkte}" MinWidth="250"  Width="*"/>
                                            <DataGridTextColumn Header="6-Tage-Rennen Platz" Binding="{Binding SechsTageRennen_Platz}" MinWidth="250"  Width="*"/>
                                            <DataGridTextColumn Header="Sarg" Binding="{Binding Sarg}" MinWidth="60"  Width="*"/>
                                            <DataGridTextColumn Header="Pokal" Binding="{Binding Pokal}"  MinWidth="70" Width="*"/>
                                            <DataGridTextColumn Header="Neuner" Binding="{Binding Neuner}" MinWidth="100"  Width="*"/>
                                            <DataGridTextColumn Header="Ratten" Binding="{Binding Ratten}"  MinWidth="90" Width="*"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </mw:MetroTabItem>

                            <mw:MetroTabItem Header="Statistik"  HeaderTemplate="{StaticResource TabButtonTemplate}"
                                             VerticalContentAlignment="Top">
                                <Grid Margin="0 10">
                                    <DataGrid x:Name="dgStatistik"
                                              IsReadOnly="True"
                                              ItemsSource="{Binding StatistikSpieler}">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="HolzMeisterSumme" Binding="{Binding HolzMeisterSumme}" MinWidth="220" Width="*"/>
                                            <DataGridTextColumn Header="HolzMeisterMax" Binding="{Binding HolzMeisterMax}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="HolzMeisterMin" Binding="{Binding HolzMeisterMin}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="HolzMeisterAVG" Binding="{Binding HolzMeisterAVG}" MinWidth="200" Width="*"/>
                                            
                                            <DataGridTextColumn Header="HolzBlitzSumme" Binding="{Binding HolzBlitzSumme}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="HolzBlitzMax" Binding="{Binding HolzBlitzMax}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="HolzBlitzMin" Binding="{Binding HolzBlitzMin}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="HolzBlitzAVG" Binding="{Binding HolzBlitzAVG}" MinWidth="200" Width="*"/>
                                            
                                            <DataGridTextColumn Header="HolzSumme" Binding="{Binding HolzSumme}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="HolzMax" Binding="{Binding HolzMax}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="HolzMin" Binding="{Binding HolzMin}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="HolzAVG" Binding="{Binding HolzAVG}" MinWidth="200" Width="*"/>
                                            
                                            
                                            <DataGridTextColumn Header="RattenSumme" Binding="{Binding RattenSumme}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="RattenMax" Binding="{Binding RattenMax}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="NeunerSumme" Binding="{Binding NeunerSumme}" MinWidth="200" Width="*"/>
                                            <DataGridTextColumn Header="NeunerMax" Binding="{Binding NeunerMax}" MinWidth="200" Width="*"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </mw:MetroTabItem>

                        </mw:MetroAnimatedTabControl>
                        
                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="BtnNeuesMitglied"
                                    Margin="8,4,8,8"
                                    HorizontalAlignment="Left"
                                    Content="Neues Mitglied"
                                    Visibility="{Binding BtnNeuVisibility, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisConverter}}"
                                    IsEnabled="{Binding BtnNeuEnabled, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding NeuesMitgliedCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button x:Name="BtnAbbrechen"
                                    Margin="8,4,8,8"
                                    HorizontalAlignment="Left"
                                    Content="Abbrechen"
                                    Visibility="{Binding BtnAbbrechenVisibility, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisConverter}}"
                                    IsEnabled="{Binding BtnAbbrechenEnabled, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding AbbrechenCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button Margin="8,4,8,8"
                                    HorizontalAlignment="Left"
                                    Content="Bearbeiten"
                                    IsEnabled="{Binding BtnBearbeitenEnabled, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding MitgliedBearbeitenCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button Margin="8,4,8,8"
                                    HorizontalAlignment="Left"
                                    Content="Speichern"
                                    IsEnabled="{Binding BtnSpeichernEnabled, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding MitgliedSpeichernCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button x:Name="BtnDrucken"
                                    Margin="8,4,8,8"
                                    HorizontalAlignment="Left"
                                    Content="Druckvorschau"
                                    IsEnabled="{Binding BtnDruckenEnabled, UpdateSourceTrigger=PropertyChanged}"
                                    Click="BtnDrucken_OnClick">
                            </Button>
                            <GroupBox Header="Druckauswahl" 
                                      Margin="10 0"
                                      Background="{DynamicResource BackgroundBrush}"
                                      Foreground="{DynamicResource PrimaryBrush}">
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Content="Ergebnisse" 
                                              Margin="10"
                                              IsChecked="{Binding DruckErgebnisse}" />
                                    <CheckBox Content="Statistik" 
                                              Margin="5 10"
                                              IsChecked="{Binding DruckStatistik}" />
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </StackPanel>
                </md:Card>
                
                <!--ProgressRing-->
                <mw:ProgressRing
                    IsActive="True"
                    Visibility="{Binding IsPageBusy, Converter={StaticResource BoolToVisConverter}}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Foreground="{DynamicResource PrimaryBrush}"
                    Height="100" Width="100">
                </mw:ProgressRing>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
